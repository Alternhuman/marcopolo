CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT( MARCOCPPBINDING )
find_package(RapidJSON)

SET( MARCOCPPBINDING_TEST_SRC
  ${CMAKE_SOURCE_DIR}/src/main.cpp
  ${CMAKE_SOURCE_DIR}/src/marco.cpp
  # ${CMAKE_SOURCE_DIR}/src/marcobinding.cpp
  # ${CMAKE_SOURCE_DIR}/src/marcoexception.cpp
  # ${CMAKE_SOURCE_DIR}/src/JSON.cpp
  # ${CMAKE_SOURCE_DIR}/src/JSONValue.cpp
  ${CMAKE_SOURCE_DIR}/src/utf8.c
)

SET( MARCOCPPBINDING_SRC
  ${CMAKE_SOURCE_DIR}/src/marco.cpp
  # ${CMAKE_SOURCE_DIR}/src/marcobinding.cpp
  # ${CMAKE_SOURCE_DIR}/src/marcoexception.cpp
  # ${CMAKE_SOURCE_DIR}/src/JSON.cpp
  # ${CMAKE_SOURCE_DIR}/src/JSONValue.cpp
  ${CMAKE_SOURCE_DIR}/src/utf8.c
)

INCLUDE_DIRECTORIES( "${CMAKE_SOURCE_DIR}/include" )
INCLUDE_DIRECTORIES( ${CMAKE_BINARY_DIR} )

#ADD_EXECUTABLE( marcobindingtest ${MARCOCPPBINDING_TEST_SRC})
#TARGET_LINK_LIBRARIES( marcobindingtest ${RAPIDJSON_LIBRARIES})

SET(CMAKE_EXE_LINKER_FLAGS "-Wall -Wno-write-strings")
#add_definitions(${CMAKE_EXE_LINKER_FLAGS})

ADD_LIBRARY( marcopolo SHARED ${MARCOCPPBINDING_SRC})
TARGET_LINK_LIBRARIES( marcopolo ${RAPIDJSON_LIBRARIES})

ADD_EXECUTABLE(marcopolotest ${MARCOCPPBINDING_TEST_SRC})

INSTALL(TARGETS marcopolo EXPORT marcopolo DESTINATION /usr/lib PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
INSTALL(EXPORT marcopolo NAMESPACE marcopolo_ DESTINATION /usr/lib/marcopolo)

#http://stackoverflow.com/a/11097012/2628463
file(GLOB DEPLOY_FILES_AND_DIRS "${CMAKE_SOURCE_DIR}/include/*.hpp")
foreach(ITEM ${DEPLOY_FILES_AND_DIRS})
    IF( IS_DIRECTORY "${ITEM}" )
       LIST( APPEND DIRS_TO_DEPLOY "${ITEM}" )
    ELSE()
       LIST( APPEND FILES_TO_DEPLOY "${ITEM}" )
    ENDIF()
endforeach()

INSTALL( FILES ${FILES_TO_DEPLOY} DESTINATION /usr/include/marcopolo PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)
INSTALL( DIRECTORY ${DIRS_TO_DEPLOY} DESTINATION /usr/include/marcopolo PATTERN "*" PERMISSIONS OWNER_READ OWNER_WRITE GROUP_READ WORLD_READ)

